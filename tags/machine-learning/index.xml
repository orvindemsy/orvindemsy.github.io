<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machine-learning on Orvin Demsy</title>
    <link>https://orvindemsy.github.io/portfolio/tags/machine-learning/</link>
    <description>Recent content in machine-learning on Orvin Demsy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://orvindemsy.github.io/portfolio/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Grid Search/Randomized CV’s (refit=True)</title>
      <link>https://orvindemsy.github.io/portfolio/blog/blog-3/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orvindemsy.github.io/portfolio/blog/blog-3/</guid>
      <description>In this article I will share my experience and knowledge of implementing hyperparameter tuning with scikit-learn’s GridSearchCV or RandomizedCV. Concretely, I will focus on refit=True parameter as those are the ones that confuses me the most upon early use of GridSearch/RandomizedCV. I hope this article will help you build better understanding on those methods Pre-requisite First off, as prerequisite a basic understanding in the following topics are expected:
 K-Fold CV Training a model Hyperparameters  I will try to explain briefly here, but I encourage you to read up information about it yourself.</description>
    </item>
    
    <item>
      <title>Basic Two-Class BCI Motor Imagery Display</title>
      <link>https://orvindemsy.github.io/portfolio/post/project-2/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://orvindemsy.github.io/portfolio/post/project-2/</guid>
      <description>This program serves as interface for two-class BCI motor imagery application. Two major programs are used in this application, the first one is the GUI program which is built in python language. Second one is the program that interacts with g.tec USB AMP device to record EEG signal. This one is an exe application generated by program written in C#. In this document the first program (GUI) may be referred as ‘master’, while the second one (recording) is referred as ‘slave’.</description>
    </item>
    
    <item>
      <title>Common Spatial Pattern</title>
      <link>https://orvindemsy.github.io/portfolio/post/project-3/</link>
      <pubDate>Fri, 10 Jul 2020 11:00:59 -0400</pubDate>
      
      <guid>https://orvindemsy.github.io/portfolio/post/project-3/</guid>
      <description>Brain-computer interface requires several steps in order to work. Among those step are feature extraction. In order to be able to operate BCI system optimally a powerful feature extraction method is required. In motor-imagery (MI) paradigm a commonly used method for feature extarction is called common-spatial pattern (CSP). This is my implementation of CSP algorithm on BCI dataset IV 2a.
Snapshot of classification result   See here to see more about this project</description>
    </item>
    
    <item>
      <title>Coursera Machine Learning Course</title>
      <link>https://orvindemsy.github.io/portfolio/post/project-1/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://orvindemsy.github.io/portfolio/post/project-1/</guid>
      <description>This project is a python implementation of Andrew Ng&amp;rsquo;s Machine Learning Course on Coursera, the original course was done in MATLAB.
Although scikit-learn package provide robust functionality to perform machine learning, this code doesn&amp;rsquo;t use it. This work also serves as an exercise for me to learn a python language.
The course syllabus is taught over the span of eleven weeks, the details of each week&amp;rsquo;s topic are as follows:</description>
    </item>
    
  </channel>
</rss>
